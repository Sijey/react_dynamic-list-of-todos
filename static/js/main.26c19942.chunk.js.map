{"version":3,"sources":["components/user/User.js","components/todoitem/TodoItem.js","components/table/TodoList.js","api/todos.js","api/users.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","href","concat","email","name","TodoItem","todo","title","user_User","completed","Table","Cell","positive","negative","TodoList","todos","celled","Header","Row","HeaderCell","Body","map","todoitem_TodoItem","key","id","fetch","then","response","json","users","getTodosWithUsers","todoList","userList","_objectSpread","find","item","userId","App","state","isLoading","hasError","getData","_this","setState","Promise","all","_ref2","Object","slicedToArray","catch","finally","_this$state","this","todosWithUsers","Fragment","Button","type","onClick","length","table_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.26c19942.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td><a href={`mailto:${user.email}`}>{user.name}</a></td>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport User from '../user/User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    {todo.completed ? (\n      <Table.Cell positive>\n        Completed\n      </Table.Cell>\n    ) : (\n      <Table.Cell negative>\n        In progress\n      </Table.Cell>\n    )\n    }\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport TodoItem from '../todoitem/TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <Table celled>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Todo</Table.HeaderCell>\n        <Table.HeaderCell>User email</Table.HeaderCell>\n        <Table.HeaderCell>Is completed</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))\n      }\n    </Table.Body>\n  </Table>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const todos = () => fetch('https://jsonplaceholder.typicode.com/todos')\n  .then(response => response.json());\n\nexport default todos;\n","const users = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json());\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport TodoList from './components/table/TodoList';\nimport todos from './api/todos';\nimport users from './api/users';\n\nfunction getTodosWithUsers(todoList, userList) {\n  return todoList.map(todo => ({\n    ...todo,\n    user: userList.find(item => item.id === todo.userId),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    isLoading: false,\n    todoList: [],\n    userList: [],\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([todos(), users()])\n      .then(([todoList, userList]) => {\n        this.setState({\n          todoList,\n          userList,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      userList, todoList, isLoading, hasError,\n    } = this.state;\n    const todosWithUsers = getTodosWithUsers(todoList, userList);\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Loading failed</p>\n          <Button type=\"button\" onClick={this.getData}>Retry</Button>\n        </>\n      );\n    }\n\n    if (!userList.length && !todoList.length) {\n      return <Button type=\"button\" onClick={this.getData}>Load</Button>;\n    }\n\n    return <TodoList todos={todosWithUsers} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}