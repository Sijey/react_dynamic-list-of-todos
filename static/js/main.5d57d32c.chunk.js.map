{"version":3,"sources":["components/user/User.js","components/todoitem/TodoItem.js","components/table/TodoList.js","api/api.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","href","concat","email","name","TodoItem","todo","title","user_User","completed","Table","Cell","positive","negative","TodoList","todos","sort","Fragment","Button","type","onClick","celled","Header","Row","HeaderCell","Body","map","todoitem_TodoItem","key","id","getUrl","url","fetch","then","response","json","users","App","state","isLoading","todosWithUsers","hasError","getData","_this","setState","Promise","all","_ref2","Object","slicedToArray","todoList","userList","_objectSpread","find","item","userId","catch","finally","handleSort","prevState","b","localeCompare","_this$state","this","length","table_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5d57d32c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td><a href={`mailto:${user.email}`}>{user.name}</a></td>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport User from '../user/User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    {todo.completed ? (\n      <Table.Cell positive>\n        Completed\n      </Table.Cell>\n    ) : (\n      <Table.Cell negative>\n        In progress\n      </Table.Cell>\n    )\n    }\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Button } from 'semantic-ui-react';\nimport TodoItem from '../todoitem/TodoItem';\n\nconst TodoList = ({ todos, sort }) => (\n  <>\n    <Button\n      type=\"button\"\n      onClick={() => sort()}\n    >\n      Sort by title\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('userName')}\n    >\n      Sort by name\n    </Button>\n    <Button\n      type=\"button\"\n      onClick={() => sort('completed')}\n    >\n      Sort by completed\n    </Button>\n\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Todo</Table.HeaderCell>\n          <Table.HeaderCell>User email</Table.HeaderCell>\n          <Table.HeaderCell>Is completed</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))\n        }\n      </Table.Body>\n    </Table>\n  </>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sort: PropTypes.func.isRequired,\n};\n","function getUrl(url) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nconst users = getUrl('https://jsonplaceholder.typicode.com/users');\nconst todos = getUrl('https://jsonplaceholder.typicode.com/todos');\n\nexport { users, todos };\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport TodoList from './components/table/TodoList';\nimport { todos, users } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    isLoading: false,\n    todosWithUsers: [],\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([todos, users])\n      .then(([todoList, userList]) => {\n        const todosWithUsers = todoList.map(todo => ({\n          ...todo,\n          user: userList.find(item => item.id === todo.userId),\n        }));\n        this.setState({ todosWithUsers });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  handleSort = (sort) => {\n    this.setState(prevState => ({\n      todosWithUsers: prevState.todosWithUsers.sort((a, b) => {\n        switch (sort) {\n          case 'userName':\n            return a.user.name.localeCompare(b.user.name);\n          case 'completed':\n            return b.completed - a.completed;\n          default:\n            return a.title.localeCompare(b.title);\n        }\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      todosWithUsers, isLoading, hasError,\n    } = this.state;\n    const sort = this.handleSort;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Loading failed</p>\n          <Button type=\"button\" onClick={this.getData}>Retry</Button>\n        </>\n      );\n    }\n\n    if (!todosWithUsers.length) {\n      return <Button type=\"button\" onClick={this.getData}>Load</Button>;\n    }\n\n    return <TodoList todos={todosWithUsers} sort={sort} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}